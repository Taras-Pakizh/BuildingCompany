@*@using MVC_Practice.Models.DbModels*@
@using CourseworkBD.DAL.DbContext;
@using CourseworkBD.DAL.Models;


@helper ContentList(IEnumerable<Content> Model, IList<bool> isItemsStored, bool IsReadonly)
{
    <tr>
        <th>Resource</th>
        <th>Price per unit</th>
        <th>Amount</th>
        @if (!IsReadonly)
        {
            <th></th>
        }

    </tr>
    int i = 0;
    foreach (var item in Model)
    {
        <tr>
            <td>@item.Resource.Name</td>
            <td>@item.Price</td>
            <td>@item.Amount</td>
            @if (!IsReadonly)
            {
                <td>
                    @if (isItemsStored[i])
                    {
                        <h4>Storaged</h4>
                    }
                    else
                    {
                        <form class="form-inline" method="get" action="/Shipment/OpenItem">
                            <input type="hidden" value="@item.Id" name="id" />
                            <input type="submit" value="Shipment" class="btn btn-success" />
                        </form>
                    }
                </td>
            }
        </tr>
        i++;
    }
}

@helper StorageList(IEnumerable<Storage> Model, bool IsReadonly)
{
    <tr>
        <th>Storage</th>
        @if (!IsReadonly)
        {
            <th></th>
            <th></th>
            <th></th>
        }
    </tr>
    foreach (var item in Model.ToList())
    {
        <tr>
            <td>@item.storageAddres</td>
            @if (!IsReadonly)
            {
                <td>
                    <form class="form-inline" method="get" action="/Storage/OpenStorage">
                        <input type="hidden" value="@item.storageID" name="id" />
                        <input type="submit" value="Open" class="btn btn-primary" />
                    </form>
                </td>
                <td>
                    <form class="form-inline" method="get" action="/Storage/Update">
                        <input type="hidden" value="@item.storageID" name="id" />
                        <input type="submit" value="Update" class="btn btn-warning" />
                    </form>
                </td>
                <td>
                    <form class="form-inline" method="get" action="/Storage/Delete">
                        <input type="hidden" value="@item.storageID" name="id" />
                        <input type="submit" value="Delete" class="btn btn-danger" />
                    </form>
                </td>
            }
        </tr>
    }
}

@helper StorageResourcesList(IEnumerable<Resources_Storages> Model, bool IsReadonly)
{
    <tr>
        <th>Resource</th>
        <th>Amount</th>
        @if (!IsReadonly)
        {
            <th></th>
        }
    </tr>
    foreach (var item in Model.ToList())
    {
        <tr>
            <td>@item.Resource.Name</td>
            <td>@item.resourceAmount</td>
            @if (!IsReadonly)
            {
                <td>
                    <form class="form-inline" method="get" action="/Sending/Add">
                        <input type="hidden" value="@item.resourceStorageID" name="id" />
                        <input type="submit" value="Send" class="btn btn-primary" />
                    </form>
                </td>
            }
        </tr>
    }
}

@helper ShipmantToStoragesList(IEnumerable<ShipmentToStorage> Model, bool IsReadonly)
{
    <tr>
        <th>Date</th>
        <th>Resource</th>
        <th>Amount</th>
        <th>Storage</th>
        @if (!IsReadonly)
        {
            <th></th>
            <th></th>
            <th></th>
        }
    </tr>

    foreach (var item in Model.ToList())
    {
        <tr>
            <td>@item.shipmentDate</td>
            <td>@item.Resources_Storages.Resource.Name</td>
            <td>@item.resourceAmount</td>
            <td>@item.Resources_Storages.Storage.storageAddres</td>

            @if (!IsReadonly)
            {
                <td>
                    <form class="form-inline" method="get" action="/Shipment/OpenShipmentToStorage">
                        <input type="hidden" value="@item.shipmentToStorageID" name="id" />
                        <input type="submit" value="Open" class="btn btn-primary" />
                    </form>
                </td>
                <td>
                    <form class="form-inline" method="get" action="/Shipment/Update">
                        <input type="hidden" value="@item.shipmentToStorageID" name="id" />
                        <input type="submit" value="Update" class="btn btn-warning" />
                    </form>
                </td>
                <td>
                    <form class="form-inline" method="get" action="/Shipment/Delete">
                        <input type="hidden" value="@item.shipmentToStorageID" name="id" />
                        <input type="submit" value="Delete" class="btn btn-danger" />
                    </form>
                </td>
            }
        </tr>
    }
}

@helper ShipmentToStorageDetailes(ShipmentToStorage Model)
{
    <ul class="list-group">
        <li class="list-group-item">
            <h4>Date of shipment:</h4>

            <b>@Model.shipmentDate</b>
        </li>
        <li class="list-group-item">
            <h4>Resource type:</h4>

            <b>@Model.Resources_Storages.Resource.Name</b>
        </li>
        <li class="list-group-item">
            <h4>Amount:</h4>

            <b>@Model.resourceAmount</b>
        </li>
        <li class="list-group-item">
            <h4>Storage:</h4>

            <b>@Model.Resources_Storages.Storage.storageAddres</b>
        </li>
        <li class="list-group-item">
            <h4>Order</h4>

            <table class="table">
                @PurchaseHelpers.OrdersList(new List<DeliveryOrder>() { Model.DeliverysContent.Order }, new List<bool>() { false }, true, true)
            </table>
        </li>
        <li class="list-group-item">
            <h4>Content</h4>

            <table class="table">
                @PurchaseHelpers.ContentList(new List<Content>() { Model.DeliverysContent }, true)
            </table>
        </li>
    </ul>
}
