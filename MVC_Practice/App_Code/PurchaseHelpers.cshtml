@using MVC_Practice.Models.DbModels

@helper OrdersList(IEnumerable<DeliveryOrder> Model, IList<bool> isStored, bool IsReadonly, bool IsClosed)
{
    <tr>
        <th>Supplier</th>
        <th>Date</th>
        <th>Sum price</th>

        @if (!IsClosed)
        {
            <th></th>
        }

        @if (!IsReadonly)
        {
            <th></th>
            <th></th>
            <th></th>
        }
    </tr>

    int i = 0;
    foreach (var item in Model)
    {
    <tr>
        <td>@item.Supplier.supplierName</td>
        <td>@item.deliveryOrderDate</td>
        <td>@item.sumPrice</td>
        @if (!IsClosed)
        {
            <td>
                <form class="form-inline" method="get" action="/Purchase/Open">
                    <input type="hidden" value="@item.deliveryOrderID" name="id" />
                    <input type="submit" value="Open" class="btn btn-primary" />
                </form>
            </td>
        }
        @if (!IsReadonly)
        {
            <td>
                @if (isStored[i])
                {
                    <h4>Storaged</h4>
                }
                else
                {
                    <form class="form-inline" method="get" action="/Shipment/OpenOrder">
                        <input type="hidden" value="@item.deliveryOrderID" name="id" />
                        <input type="submit" value="Shipment" class="btn btn-success" />
                    </form>
                }
            </td>
            <td>
                <form class="form-inline" method="get" action="/Purchase/Delete">
                    <input type="hidden" value="@item.deliveryOrderID" name="id" />
                    <input type="submit" value="Delete" class="btn btn-danger" />
                </form>
            </td>
            <td>
                <form class="form-inline" method="get" action="/Purchase/Update">
                    <input type="hidden" value="@item.deliveryOrderID" name="id" />
                    <input type="submit" value="Update" class="btn btn-warning" />
                </form>
            </td>
        }
    </tr>
    ++i;
    }
}

@helper ContentList(IEnumerable<DeliverysContent> Model, bool IsReadonly)
{
    <tr>
        <th>Resource</th>
        <th>Price per unit</th>
        <th>Amount</th>

        @if (!IsReadonly)
        {
            <th></th>
            <th></th>
        }
    </tr>
    foreach (var item in Model)
    {
        <tr>
            <td>@item.Resource.resourceName</td>
            <td>@item.resourcePrice</td>
            <td>@item.contentAmount</td>
            @if (!IsReadonly)
            {
                <td>
                    <form class="form-inline" method="get" action="/Purchase/DeleteItem">
                        <input type="hidden" value="@item.contentID" name="id" />
                        <input type="submit" value="Delete" class="btn btn-danger" />
                    </form>
                </td>
                <td>
                    <form class="form-inline" method="get" action="/Purchase/UpdateItem">
                        <input type="hidden" value="@item.contentID" name="id" />
                        <input type="submit" value="Update" class="btn btn-warning" />
                    </form>
                </td>
            }
        </tr>
    }
}

@helper OrderDetails(DeliveryOrder Model)
{
        <ul class="list-group">
            <li class="list-group-item">
                <h4>Supplier:</h4>

                <b>@Model.Supplier.supplierName</b>
            </li>
            <li class="list-group-item">
                <h4>Date of order:</h4>

                <b>@((((DateTime)Model.deliveryOrderDate).ToShortDateString()))</b>
            </li>
            <li class="list-group-item">
                <h4>Sum price:</h4>

                <b>@Model.sumPrice</b>
            </li>
            <li class="list-group-item">
                <h4>Content:</h4>

                <table class="table">
                    @PurchaseHelpers.ContentList(Model.DeliverysContents, true)
                </table>
            </li>
        </ul>
}
